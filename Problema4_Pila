#include <iostream>
using namespace std;

class Empleado {
public:
    string nombre;
    int id;
    
    Empleado() {}
    Empleado(string n, int i) : nombre(n), id(i) {}
};

const int MAX = 500;

class Pila {
private:
    Empleado datos[MAX];
    int tope;
public:
    Pila() { tope = -1; }
    
    bool vacia() { return tope == -1; }
    bool llena() { return tope == MAX - 1; }
    
    void push(Empleado e) {
        if (llena()) {
            cout << "Pila llena\n";
            return;
        }
        datos[++tope] = e;
    }
    
    void pop() {
        if (vacia()) {
            cout << "Pila vacía\n";
            return;
        }
        tope--;
    }
    
    void top() {
        if (vacia()) {
            cout << "La pila se encuentra vacía\n";
            return;
        }
        cout << "ID: " << datos[tope].id << " - Nombre: " << datos[tope].nombre << endl;
    }
};

int main() {
    Pila pila;
    int opcion, id;
    string nombre;
    
    do {
        cout << "\n1. Push\n2. Pop\n3. Top\n4. Salir\nOpción: ";
        cin >> opcion;
        
        switch(opcion) {
            case 1:
                cout << "Ingrese ID y Nombre: ";
                cin >> id >> nombre;
                pila.push(Empleado(nombre, id));
                break;
            case 2:
                pila.pop();
                break;
            case 3:
                pila.top();
                break;
            case 4:
                cout << "Saliendo...\n";
                break;
            default:
                cout << "Opción inválida\n";
        }
    } while (opcion != 4);
    
    return 0;
}
